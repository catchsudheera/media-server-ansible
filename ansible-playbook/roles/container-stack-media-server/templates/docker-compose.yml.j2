version: "3.8"

services:
  sonarr:
    image: lscr.io/linuxserver/sonarr
    container_name: sonarr
    networks:
      - media_server_network
    environment:
      - PUID={{ server_data_user_uid }}
      - PGID={{ server_data_group_gid }}
      - TZ={{ server_timezone}}
    volumes:
      - {{ sonarr_config_path_local }}:/config
      - {{ sonarr_library_path }}:/tv
      - {{ sonarr_download_path }}:/downloads/tv
    ports:
      - 8989:8989
    healthcheck:
      test: ["CMD-SHELL", "curl -s -X GET -I  http://localhost:8989/sonarr | grep '200 OK' || exit 1"]
      interval: 2m
      timeout: 30s
      retries: 10
      start_period: 2m
    restart: always
  radarr:
    image: lscr.io/linuxserver/radarr
    container_name: radarr
    networks:
      - media_server_network
    environment:
      - PUID={{ server_data_user_uid }}
      - PGID={{ server_data_group_gid }}
      - TZ={{ server_timezone}}
    volumes:
      - {{ radarr_config_path_local }}:/config
      - {{ radarr_library_path }}:/movies
      - {{ radarr_download_path }}:/downloads/movies
    ports:
     - 7878:7878
    healthcheck:
      test: ["CMD-SHELL", "curl -s -X GET -I  http://localhost:7878/radarr | grep '200 OK' || exit 1"]
      interval: 2m
      timeout: 30s
      retries: 10
      start_period: 2m
    restart: always
  jackett:
    image: lscr.io/linuxserver/jackett
    container_name: jackett
    networks:
      - media_server_network
    environment:
      - PUID={{ server_data_user_uid }}
      - PGID={{ server_data_group_gid }}
      - TZ={{ server_timezone}}
      - AUTO_UPDATE=false
    volumes:
      - {{ jackett_config_path }}:/config
      - {{ jackett_torrent_file_path }}:/downloads
    ports:
     - 9117:9117
    healthcheck:
      test: ["CMD-SHELL", "curl -s -X GET -I  http://localhost:9117/UI/Login | grep '200 OK' || exit 1"]
      interval: 2m
      timeout: 30s
      retries: 10
      start_period: 2m
    restart: always
  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr
    networks:
      - media_server_network
    container_name: flaresolverr
    ports:
      - 8191:8191
    healthcheck:
      test: ["CMD-SHELL", "curl -s -X GET -I http://localhost:8191 || exit 1"]
      interval: 2m
      timeout: 30s
      retries: 10
      start_period: 2m
    restart: always
{% filter indent(width=2) %}
  {% if add_vpn_container == true %}
{% include 'docker-compose-fragment-vpn.yml.j2' %}
  {% else %}
{% include 'docker-compose-fragment-no-vpn.yml.j2' %}
  {% endif %}
{% endfilter %}


networks:
{% if add_vpn_container == true %}
  vpn_local:
    driver: bridge
{% endif %}
  media_server_network:
    external:
      name: {{ docker_bridge_network_name }}