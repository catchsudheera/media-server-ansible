---
- name: Create stack root directory
  file:
    path: "{{ reverse_proxy_container_stack_location }}"
    state: directory
    owner: "{{ server_data_dir_user }}"
    group: "{{ server_data_dir_group }}"

- name: Create reverse_proxy directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ server_data_dir_user }}"
    group: "{{ server_data_dir_group }}"
  loop:
    - "{{ swag_config_path }}"
    - "{{ duckdns_config_path }}"
    - "{{ heimdall_config_path }}"
    - "{{ heimdall_config_path }}/www"
    - "{{ heimdall_config_path }}/www/SupportedApps"
    - "{{ heimdall_config_path }}/www/icons"
    - "/tmp/heimdall-support"

- name: Copy Heimdall database
  copy:
    src: heimdall-app.sqlite
    dest: "{{ heimdall_config_path }}/www/app.sqlite"
    owner: "{{ server_data_dir_user }}"
    group: "{{ server_data_dir_group }}"

- name: Copy Heimdall support files (local:remote)
  unarchive:
    src: heimdall-support/bundle.tar.gz
    dest: /tmp/heimdall-support/
    owner: "{{ server_data_dir_user }}"
    group: "{{ server_data_dir_group }}"

- name: Copy Heimdall support files (remote:remote)
  copy:
    src: "/tmp/heimdall-support/{{ item }}/"
    remote_src: yes
    dest: "{{ heimdall_config_path }}/www/{{ item }}/"
    owner: "{{ server_data_dir_user }}"
    group: "{{ server_data_dir_group }}"
  loop:
    - SupportedApps
    - icons

- name: Installing sqlit3 for heimdall data injection
  apt:
    name: sqlite3
    update_cache: yes

- name: Insert Heimdall items
  script:
    cmd: "update-heimdall-db.sh {{ heimdall_config_path }} {{ server_domain_name }} {{ item }}"
  loop:
    - sonarr
    - radarr
    - transmission
    - jackett
    - portainer
    - uptime-kuma

- name: Copy Docker compose template
  template:
    src: docker-compose.yml.j2
    dest: "{{ reverse_proxy_container_stack_location }}/docker-compose.yml"
    owner: "{{ server_data_dir_user }}"
    group: "{{ server_data_dir_group }}"

- name: Start Docker containers using docker-compose
  community.docker.docker_compose:
    project_src: "{{ reverse_proxy_container_stack_location }}"
  tags: start-stacks

- name: Wait until Swag container up and create subfolder configs
  wait_for:
    path: "{{ swag_config_path }}/nginx/proxy-confs/{{ item.name }}.{{ item.type }}.conf.sample"
  loop:
    - { name: sonarr, type: subdomain }
    - { name: radarr, type: subdomain }
    - { name: transmission, type: subdomain }
    - { name: jackett, type: subdomain }
    - { name: portainer, type: subdomain }
    - { name: uptime-kuma, type: subdomain }
    - { name: heimdall, type: subfolder }

- name: Wait until Swag container up and create default config
  wait_for:
    path: "{{ swag_config_path }}/nginx/site-confs/default"

- name: Adding subdomain reverse proxy configuration
  copy:
    src: "{{ swag_config_path }}/nginx/proxy-confs/{{ item.name }}.{{ item.type }}.conf.sample"
    dest: "{{ swag_config_path }}/nginx/proxy-confs/{{ item.name }}.{{ item.type }}.conf"
    remote_src: yes
    owner: "{{ server_data_dir_user }}"
    group: "{{ server_data_dir_group }}"
  loop:
    - { name: sonarr, type: subdomain }
    - { name: radarr, type: subdomain }
    - { name: transmission, type: subdomain }
    - { name: jackett, type: subdomain }
    - { name: portainer, type: subdomain }
    - { name: uptime-kuma, type: subdomain }
    - { name: heimdall, type: subfolder }

- name: Correct the incorrect server_name for uptime-kuma
  lineinfile:
    path: "{{ swag_config_path }}/nginx/proxy-confs/uptime-kuma.subdomain.conf"
    regexp: '^\s+server_name uptime.\*;$'
    line: "    server_name uptime-kuma.*;"

- name: Install new nginx config
  copy:
    src: nginx-server.conf
    dest: "{{ swag_config_path }}/nginx/site-confs/default"
    owner: "{{ server_data_dir_user }}"
    group: "{{ server_data_dir_group }}"

- name: Restart Docker containers using docker-compose
  community.docker.docker_compose:
    project_src: "{{ reverse_proxy_container_stack_location }}"
    restarted: yes

- name: Stop Docker containers if running
  block:
    - name: Check wether the docker file exist
      stat:
        path: "{{ reverse_proxy_container_stack_location }}/docker-compose.yml"
      register: reverse_proxy_container_stack_location_docker_compose_file

    - name: Stopping using docker compose
      community.docker.docker_compose:
        project_src: "{{ reverse_proxy_container_stack_location }}"
        state: absent
      when: reverse_proxy_container_stack_location_docker_compose_file.stat.exists
  tags: [ 'never', 'stop-stacks' ]