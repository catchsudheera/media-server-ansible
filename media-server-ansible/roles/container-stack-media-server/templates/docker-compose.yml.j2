version: "3.8"

services:
  vpn:
    image: ghcr.io/bubuntux/nordvpn
    container_name: {{ vpn_container_name }}
    networks:
      - media_server_network
      - vpn_local
    cap_add:
      - NET_ADMIN
    sysctls:
      - net.ipv4.conf.all.rp_filter=2
    devices:
      - /dev/net/tun
    environment:                # Review https://github.com/bubuntux/nordvpn#environment-variables
      - USER=${VPN_USERNAME}
      - "PASS=${VPN_PASSWORD}"
      - CONNECT=Netherlands
      - TECHNOLOGY=OpenVPN
      - PROTOCOL=TCP
      - OBFUSCATE=Enable
      - NETWORK=${NETWORK}
      - POST_CONNECT=iptables -A INPUT -p tcp --dport 9091 -j ACCEPT
    ports:
{% if transmission_enable == true %}
      - 9091:9091
{% endif %}
{% if qbittorrent_enable == true %}
      - 6881:6881
      - 6881:6881/udp
      - 8080:8080
{% endif %}
    healthcheck:
      test: ["CMD-SHELL", "curl -s https://api.nordvpn.com/vpn/check/full | grep 'Protected' || exit 1"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 40s
    restart: unless-stopped
{% if transmission_enable == true %}
  transmission:
    image: ghcr.io/linuxserver/transmission
    container_name: {{ transmission_container_name }}
    environment:
      - PUID={{ server_data_user_uid }}
      - PGID={{ server_data_group_gid }}
      - TZ={{ server_timezone}}
    volumes:
      - {{ transmission_config_path }}:/config
      - {{ transmission_download_path }}:/downloads
    healthcheck:
      test: ["CMD-SHELL", "( curl -s https://api.nordvpn.com/vpn/check/full | grep 'Protected' && curl -s -X GET -I -u ${TRANSMISSION_USERNAME}:${TRANSMISSION_PASSWORD} http://localhost:9091/transmission/web/ | grep '200 OK' ) || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 2m
    restart: unless-stopped
    network_mode: service:vpn
    depends_on:
      vpn:
        condition: service_healthy
{% endif %}
{% if qbittorrent_enable == true %}
  qbittorrent:
     image: lscr.io/linuxserver/qbittorrent
     container_name: {{ qbittorrent_container_name }}
     environment:
       - PUID={{ server_data_user_uid }}
       - PGID={{ server_data_group_gid }}
       - TZ={{ server_timezone}}
       - WEBUI_PORT=8080
     volumes:
       - {{ qbittorrent_config_path }}:/config
       - {{ qbittorrent_download_path }}:/downloads
     healthcheck:
       test: ["CMD-SHELL", "( curl -s https://api.nordvpn.com/vpn/check/full | grep 'Protected' && curl -s -X GET -I  http://localhost:8080 | grep '200 OK' ) || exit 1"]
       interval: 30s
       timeout: 10s
       retries: 3
       start_period: 2m
     restart: unless-stopped
     network_mode: service:vpn
     depends_on:
       vpn:
         condition: service_healthy
{% endif %}
  sonarr:
      image: lscr.io/linuxserver/sonarr
      container_name: sonarr
      networks:
        - media_server_network
      environment:
        - PUID={{ server_data_user_uid }}
        - PGID={{ server_data_group_gid }}
        - TZ={{ server_timezone}}
      volumes:
        - {{ sonarr_config_path }}:/config
        - {{ sonarr_library_path }}:/tv
        - {{ sonarr_download_path }}:/downloads
      ports:
        - 8989:8989
      healthcheck:
       test: ["CMD-SHELL", "curl -s -X GET -I  http://localhost:8989/sonarr | grep '200 OK' || exit 1"]
       interval: 30s
       timeout: 10s
       retries: 3
       start_period: 2m
      restart: unless-stopped
  radarr:
      image: lscr.io/linuxserver/radarr
      container_name: radarr
      networks:
        - media_server_network
      environment:
        - PUID={{ server_data_user_uid }}
        - PGID={{ server_data_group_gid }}
        - TZ={{ server_timezone}}
      volumes:
        - {{ radarr_config_path }}:/config
        - {{ radarr_library_path }}:/tv
        - {{ radarr_download_path }}:/downloads
      ports:
        - 7878:7878
      healthcheck:
       test: ["CMD-SHELL", "curl -s -X GET -I  http://localhost:7878/radarr | grep '200 OK' || exit 1"]
       interval: 30s
       timeout: 10s
       retries: 3
       start_period: 2m
      restart: unless-stopped
  jackett:
      image: lscr.io/linuxserver/jackett
      container_name: jackett
      networks:
        - media_server_network
      environment:
        - PUID={{ server_data_user_uid }}
        - PGID={{ server_data_group_gid }}
        - TZ={{ server_timezone}}
        - AUTO_UPDATE=false
      volumes:
        - {{ jackett_config_path }}:/config
        - {{ jackett_torrent_file_path }}:/downloads
      ports:
        - 9117:9117
      healthcheck:
       test: ["CMD-SHELL", "curl -s -X GET -I  http://localhost:9117/UI/Login | grep '200 OK' || exit 1"]
       interval: 30s
       timeout: 10s
       retries: 3
       start_period: 2m
      restart: unless-stopped

networks:
  vpn_local:
    driver: bridge
  media_server_network:
    external:
      name: {{ docker_bridge_network_name }}